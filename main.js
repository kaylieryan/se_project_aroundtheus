!function(){"use strict";class e{constructor(e,t,n){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleCardClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_toggleLikeButton(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_deleteCard(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._toggleLikeButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._deleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick({name:this._name,link:this._link})}))}getView(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=document.querySelector(t)}_showInputError(e){this._errorElement=this._formElement.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)}_hideInputError(e){this._errorElement=this._formElement.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""}_isValid(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}toggleButtonState(){if(this._hasInvalidInput(this._inputList))return this._buttonElement.classList.add(this._inactiveButtonClass),void(this._buttonElement.disabled=!0);this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._isValid(e),this.toggleButtonState()}))})),this.toggleButtonState()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),this.setEventListeners()}close(){this._popupElement.classList.remove("modal_opened"),this._popupElement.removeEventListener("click",this._closeViaClick),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_closeViaClick=e=>{(e.target.classList.contains("modal__close")||e.target.classList.contains("modal"))&&this.close()};setEventListeners(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("click",this._closeViaClick)}}class s extends n{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input")}close(){this._popupElement.removeEventListener("submit",this._submitForm),this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputList.forEach((t=>{""!==t.value&&(e[t.name]=t.value)})),e}_submitForm=()=>{const e=this._getInputValues();this._handleFormSubmit(e)};setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",this._submitForm)}}const i="#profile-edit-modal",r="#add-card-modal",o=document.querySelector(".profile__edit-button"),l=document.querySelector(".profile__add-button"),a=document.querySelector(".profile__title"),c=document.querySelector(".profile__description"),m=document.querySelector("#modal-form-description"),u=document.querySelector("#modal-form-title"),_=document.querySelector(".cards__list"),d={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"modal__error-message",errorClass:"modal__error_visible"},p=new t(d,i),h=new t(d,r);p.enableValidation(),h.enableValidation();const E=new class{constructor(e,t){this._nameElement=e,this._jobElement=t}getUserInfo(){const e={};return e.profileName=this._nameElement.textContent,e.description=this._jobElement.textContent,e}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}}(a,c),v=new s(i,(e=>{E.setUserInfo(e.name,e.description),v.close()}));o.addEventListener("click",(function(){const{profileName:e,description:t}=E.getUserInfo();u.value=e,m.value=t,p.toggleButtonState(),v.open()}));const g=new class{constructor(e,t){let{items:n,renderer:s}=e;this._items=n,this._renderer=s,this._containerElement=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._containerElement.append(e)}prependItem(e){this._containerElement.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{let{name:t,link:n}=e;const s=k({name:t,link:n});g.addItem(s)}},_);g.renderItems();const S=new s(r,(function(e){let{title:t,url:n}=e;const s=k({name:t,link:n});g.prependItem(s),S.close()})),L=new class extends n{constructor(e){super({popupSelector:e}),this._previewImageElement=document.querySelector(".modal__preview-image"),this._previewImageCaption=document.querySelector(".modal__preview-title")}open(e){let{name:t,link:n}=e;this._previewImageElement.alt=t,this._previewImageCaption.textContent=t,this._previewImageElement.src=n,super.open()}}("#image-modal");function k(t){let{name:n,link:s}=t;const i=new e({name:n,link:s},"#card-template",(e=>{let{name:t,link:n}=e;L.open({name:t,link:n})}));return i.getView()}l.addEventListener("click",(()=>{h.toggleButtonState(),S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,